#include <bits/stdc++.h>
using namespace std;

struct info {
	int from, to, box;
};

int N, M, C, res;
vector<info> seq;

bool compare(info& a, info& b) {
	if (a.to != b.to)
		return a.to < b.to;
	return a.from < b.from;
}

int main(void) {
	cin.tie(NULL);
	ios_base::sync_with_stdio(false);
	cin >> N >> C >> M;
	seq.resize(M);
	for (int i = 0; i < M; i++) {
		cin >> seq[i].from >> seq[i].to >> seq[i].box;
	}
	sort(seq.begin(), seq.end(), compare);

	int capacity = 0, seqIdx = 0;
	queue<info> order;

	for (int i = 0; i <= N && seqIdx < seq.size();) {
		while (!order.empty() && order.front().to == i) {
			capacity -= order.front().box;
			order.pop();
		}
	
		info& x = seq[seqIdx];
		if (x.from <= i) {
			int plusSize = min(C - capacity, x.box);
			res += plusSize;
			capacity += plusSize;

			x.box = plusSize;
			order.push(x);
			seqIdx++;
		}
		else i++;
	}
	cout << res;
}