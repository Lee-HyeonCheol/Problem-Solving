#include <bits/stdc++.h>
using namespace std;

const int INF = INT_MAX;
int N;
pair<long long, long long> matrix[501];
long long cache[500][500];

long long dp(int l, int r) {
	if (l == r) return 0;
	if (l > r || l < 0 || r >= N) return INF;
	long long& ret = cache[l][r];
	if (ret != -1) return ret;
	ret = INF;

	if (l + 1 == r) {
		ret = matrix[l].first * matrix[l].second * matrix[r].second;
	}
	else
		for (int i = l; i < r; i++) {
			ret = min(ret, dp(l, i) + dp(i + 1, r) + matrix[l].first * matrix[i].second * matrix[r].second);
		}
	return ret;
}

int main(void) {
	cin.tie(NULL);
	ios_base::sync_with_stdio(false);
	cin >> N;
	for (int i = 0; i < N; i++)
		cin >> matrix[i].first >> matrix[i].second;
	memset(cache, -1, sizeof(cache));
	cout << dp(0, N - 1);
}