#include <bits/stdc++.h>
using namespace std;

#define MOD 10000

int T, a, b;
bool visited[10001];
pair<int, int> parent[10001];	// prevNum, prevNum use mode

int func(int x, int mode) {
	int ret;
	if (mode == 1) ret = (2 * x) % MOD;
	else if (mode == 2) ret = (x == 0) ? MOD - 1 : x - 1;
	else if (mode == 3) {
		int d1 = x / 1000;
		ret = (10 * x + d1) % MOD;
	}
	else {
		int d4 = x % 10;
		ret = (x / 10 + d4 * 1000) % MOD;
	}

	return ret;
}

string bfs(int a, int b) {
	memset(visited, 0, sizeof(visited));
	memset(parent, -1, sizeof(parent));
	queue<int> q;
	q.push(a);
	visited[a] = 1;

	while (!q.empty()) {
		int cur = q.front();
		q.pop();
		if (cur == b) break;

		for (int i = 1; i <= 4; i++) {
			int next = func(cur, i);
			if (visited[next]) continue;
			q.push(next);
			visited[next] = true;
			parent[next] = { cur, i };
		}
	}

	string ret = "";
	int tmp = b;
	while (parent[tmp].first != -1) {
		int mode = parent[tmp].second;
		if (mode == 1) ret += "D";
		else if (mode == 2) ret += "S";
		else if (mode == 3) ret += "L";
		else ret += "R";

		tmp = parent[tmp].first;
	}
	reverse(ret.begin(), ret.end());

	return ret;
}



int main(void) {
	cin.tie(NULL);
	ios_base::sync_with_stdio(false);
	cin >> T;

	while (T--) {
		cin >> a >> b;
		cout << bfs(a, b) << '\n';
	}
}