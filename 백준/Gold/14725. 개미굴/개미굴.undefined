#include <bits/stdc++.h>
using namespace std;

int N, M;

struct Trie {
	map<string, Trie*> next;

	void insert(vector<string>& seq, int idx) {
		if (idx == seq.size()) return;

		if (next.find(seq[idx]) == next.end()) {
			Trie* tmp = new Trie;
			next.insert({ seq[idx], tmp });
		}

		next[seq[idx]]->insert(seq, idx + 1);
	}

	void dfs(int depth) {
		for (auto& it : next) {
			for (int i = 0; i < depth; i++)
				cout << "--";
			cout << it.first << '\n';
			it.second->dfs(depth + 1);
		}
	}
};

int main(void) {
	cin.tie(NULL);
	ios_base::sync_with_stdio(false);
	cin >> N;
	Trie t;
	for (int i = 0; i < N; i++) {
		cin >> M;
		vector<string> tmp(M);
		for (int j = 0; j < M; j++)
			cin >> tmp[j];
		t.insert(tmp, 0);
	}
	t.dfs(0);
}