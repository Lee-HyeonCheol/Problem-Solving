#include <bits/stdc++.h>
using namespace std;

int N;
bool board[128][128];

void solve(int y, int x, int size, vector<int>& res) {
	int color = board[y][x];
	bool one_piece = true;
	for (int i = y; i < y + size; i++) {
		for (int j = x; j < x + size; j++)
			if (color != board[i][j]) {
				one_piece = false;
				break;
			}
		if (!one_piece)
			break;
	}

	if (one_piece) {
		res[color]++;
		return;
	}

	int d = size / 2;
	solve(y, x, d, res);
	solve(y, x + d, d, res);
	solve(y + d, x, d, res);
	solve(y + d, x + d, d, res);
}

int main(void) {
	cin.tie(NULL);
	ios_base::sync_with_stdio(false);
	cin >> N;
	for (int i = 0; i < N; i++)
		for (int j = 0; j < N; j++)
			cin >> board[i][j];

	vector<int> res(2, 0);
	solve(0, 0, N, res);
	cout << res[0] << '\n' << res[1];
}