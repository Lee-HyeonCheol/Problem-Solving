#include <bits/stdc++.h>
using namespace std;

int N, K;
vector<int> num;
vector<int> tmp;

void merge(int p, int q, int r) {
	int i = p, j = q + 1, t = 1;

	while (i <= q && j <= r) {
		if (num[i] <= num[j])
			tmp[t++] = num[i++];
		else
			tmp[t++] = num[j++];
	}
	
	while (i <= q)
		tmp[t++] = num[i++];
	while (j <= r)
		tmp[t++] = num[j++];
	i = p, t = 1;
	while (i <= r) {
		K--;
		if (K == 0) {
			cout << tmp[t];
			exit(EXIT_SUCCESS);
		}
		num[i++] = tmp[t++];
	}
}

void merge_sort(int p, int r) {
	if (p < r) {
		int q = (p + r) / 2;
		merge_sort(p, q);
		merge_sort(q + 1, r);
		merge(p, q, r);
	}
}

int main(void) {
	cin.tie(NULL);
	ios_base::sync_with_stdio(false);
	cin >> N >> K;
	num.resize(N);
	tmp.resize(N);
	for (int i = 0; i < N; i++)
		cin >> num[i];
	merge_sort(0, N - 1);

	cout << -1;
}