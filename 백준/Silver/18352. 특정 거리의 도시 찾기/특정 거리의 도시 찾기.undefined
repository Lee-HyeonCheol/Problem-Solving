#include <bits/stdc++.h>
using namespace std;

#define MAX_NUM 300001

int N, M, K, X, a, b;
vector<int> graph[MAX_NUM];
int cnt[MAX_NUM];
vector<int> res;

void bfs(int x) {
	queue<pair<int, int>> q;
	q.push({ x, 0 });
	cnt[x] = 0;

	while (!q.empty()) {
		auto cur = q.front();
		q.pop();

		if (cur.second == K) {
			res.push_back(cur.first);
			continue;
		}
		if (cnt[cur.first] < cur.second)
			continue;
	
		for (auto& next : graph[cur.first])
			if (cnt[next] > cur.second + 1) {
				cnt[next] = cur.second + 1;
				q.push({ next, cur.second + 1 });
			}
	}
}

int main(void) {
	cin.tie(NULL); cout.tie(NULL);
	ios_base::sync_with_stdio(false);
	cin >> N >> M >> K >> X;
	for (int i = 0; i < M; i++) {
		cin >> a >> b;
		graph[a].push_back(b);
	}
	for (int i = 1; i <= N; i++)
		cnt[i] = INT_MAX;
	bfs(X);
	if (res.empty()) {
		cout << -1;
		return 0;
	}
	sort(res.begin(), res.end());
	for (auto& it : res)
		cout << it << '\n';
}