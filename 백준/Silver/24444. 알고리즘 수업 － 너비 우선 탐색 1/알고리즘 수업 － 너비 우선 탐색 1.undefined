#include <bits/stdc++.h>
using namespace std;

int N, M, R, u, v;
vector<int> graph[100001];
bool visited[100001];

int sequence[100001];
int cnt = 1;

void bfs(int start) {
	queue<int> q;
	q.push(start);
	visited[start] = true;
	sequence[start] = cnt++;

	while (!q.empty()) {
		int num = q.front();
		q.pop();

		for (auto& next : graph[num]) {
			if (!visited[next]) {
				q.push(next);
				visited[next] = true;
				sequence[next] = cnt++;
			}
		}
	}
}

int main(void) {
	cin.tie(NULL);
	ios_base::sync_with_stdio(false);
	cin >> N >> M >> R;
	for (int i = 0; i < M; i++) {
		cin >> u >> v;
		graph[u].push_back(v);
		graph[v].push_back(u);
	}
	for (int i = 1; i <= N; i++)
		sort(graph[i].begin(), graph[i].end());
	bfs(R);

	for (int i = 1; i <= N; i++)
		cout << sequence[i] << '\n';
}