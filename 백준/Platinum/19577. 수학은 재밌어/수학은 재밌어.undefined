#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
ll N;

ll compute_phi(ll n) {
	ll result = n;

	for (ll i = 2; i * i <= n; i++) {
		if (n % i == 0) {
			while (n % i == 0)
				n /= i;
			result -= result / i;
		}
	}
	if (n > 1)
		result -= result / n;
	return result;
}

vector<ll> get_divisors(ll n) {
	vector<ll> divisors;
	
	for (ll i = 1; i * i <= n; i++) {
		if (n % i == 0) {
			divisors.push_back(i);
			if (i != n / i)
				divisors.push_back(n / i);
		}
	}
	
	sort(divisors.begin(), divisors.end());
	return divisors;
}

int main(void) {
	cin.tie(NULL);
	ios_base::sync_with_stdio(false);
	cin >> N;
	
	auto X = get_divisors(N);
	for (auto& it : X) {
		int x = compute_phi(it);
		if (x * it == N) {
			cout << it;
			return 0;
		}
	}
	cout << -1;
}