#include <bits/stdc++.h>
using namespace std;

int K;
string S;

vector<int> getPartitionMatch(const string& P) {
	int m = P.length();
	vector<int> pi(m, 0);
	int begin = 1, matched = 0;

	while (begin + matched < m) {
		if (P[begin + matched] == P[matched]) {
			matched++;
			pi[begin + matched - 1] = matched;
		}
		else {
			if (matched == 0)
				begin++;
			else {
				begin += matched - pi[matched - 1];
				matched = pi[matched - 1];
			}
		}
	}
	return pi;
}

int main(void) {
	cin.tie(NULL);
	ios_base::sync_with_stdio(false);
	cin >> S >> K;
	vector<int> pi = getPartitionMatch(S);
	long long m = S.length();

	long long x = pi[m - 1];
	long long res = m;
	res += (K - 1) * (m - x);
	cout << res;
}